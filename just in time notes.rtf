{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf210
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Verdana;\f2\fswiss\fcharset0 Impact;
\f3\fnil\fcharset0 Georgia;}
{\colortbl;\red255\green255\blue255;\red26\green26\blue26;\red252\green232\blue146;}
{\info
{\author Christian Chandler}
{\*\copyright all rights reserved}}\margl1440\margr1440\vieww12760\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs28 \cf0 get station object - API\
choose train direction - parse JSON obj\
*capture time data came through - set global var\
choose lead travel time\
start timer\
if time of train departure is greater than lead travel time, allow it to be a part of the list.\
\
\
stopping then restarting the timer gives the incorrect time... starting the timer goes from the beginning\
\
\
new train = train lead time - elapsed time since data collected - walking lead time\
\
start over button = get station object via API and set a new capture time\
\
\pard\pardeftab720

\f1 \cf2 \kerning1\expnd-4\expndtw-20
WEB\uc0\u8232 DEVELOPMENT\u8232 IMMERSIVE
\f2\b \
\
\pard\pardeftab720\sl400

\f3\b0\fs30 \cf2 \cb3 \kerning1\expnd0\expndtw0 Nokogiri for parsing web pages \
- Javascript + Mechanize.js for automation (currently not implemented) \
- Ruby\'92s Whenever gem for scheduling \
- Twilio for sending text notifications}